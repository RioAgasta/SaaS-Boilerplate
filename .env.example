# =============================================================================
# DATABASE CONFIGURATION (Docker PostgreSQL)
# =============================================================================
# Use this for local development with Docker (host machine access)
DATABASE_URL=postgresql://user:password@localhost:5432/saas

# Use this when running Next.js inside Docker container
# DATABASE_URL=postgresql://user:password@postgres:5432/saas

# Docker PostgreSQL credentials (defined in docker-compose.yml):
# POSTGRES_USER: user
# POSTGRES_PASSWORD: password
# POSTGRES_DB: saas
# POSTGRES_PORT: 5432

# =============================================================================
# CLERK AUTHENTICATION
# =============================================================================
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=your_clerk_publishable_key_here
CLERK_SECRET_KEY=your_clerk_secret_key_here

# Clerk redirect URLs
NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/dashboard
NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/dashboard

# =============================================================================
# STRIPE PAYMENT INTEGRATION
# =============================================================================
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# Billing environment: 'dev' for test mode, 'prod' for live mode
BILLING_PLAN_ENV=dev

# =============================================================================
# HOSTING (Production only)
# =============================================================================
# NEXT_PUBLIC_APP_URL=https://yourdomain.com

# =============================================================================
# ERROR MONITORING & LOGGING (Production)
# =============================================================================
# NEXT_PUBLIC_SENTRY_DSN=
# SENTRY_AUTH_TOKEN=
# LOGTAIL_SOURCE_TOKEN=

# =============================================================================
# DOCKER COMMANDS
# =============================================================================
# Start PostgreSQL only:
#   docker-compose -f docker/docker-compose.yml up -d
#
# Start all services (PostgreSQL + Next.js + Drizzle Studio):
#   docker-compose -f docker/docker-compose.prod.yml up -d
#
# Stop all services:
#   docker-compose -f docker/docker-compose.yml down
#
# Access Drizzle Studio:
#   http://localhost:5555
